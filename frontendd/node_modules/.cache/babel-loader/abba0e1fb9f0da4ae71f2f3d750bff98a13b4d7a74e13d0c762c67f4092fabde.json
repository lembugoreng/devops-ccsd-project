{"ast":null,"code":"var _jsxFileName = \"/Users/nurfatihah/Desktop/codes/todo-app/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, Typography, TextField, Button, List, ListItem, ListItemText, IconButton, Checkbox, Grid, Paper } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const fetchTasks = async () => {\n    try {\n      const response = await axios.get('http://localhost:5001/getTasks');\n      setTasks(response.data);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const addTask = async () => {\n    if (newTask.trim() === '') return;\n    try {\n      await axios.post('http://localhost:5001/addTask', {\n        description: newTask\n      });\n      setNewTask('');\n      fetchTasks();\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n  const updateTask = async (id, completed) => {\n    try {\n      await axios.put(`http://localhost:5001/updateTask/${id}`, {\n        completed\n      });\n      fetchTasks();\n    } catch (error) {\n      console.error('Error updating task:', error);\n    }\n  };\n  const deleteTask = async id => {\n    try {\n      await axios.delete(`http://localhost:5001/deleteTask/${id}`);\n      fetchTasks();\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    style: {\n      marginTop: '2rem'\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      style: {\n        padding: '1rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        align: \"center\",\n        gutterBottom: true,\n        children: \"Todo List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 9,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            label: \"New Task\",\n            variant: \"outlined\",\n            value: newTask,\n            onChange: e => setNewTask(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: addTask,\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: tasks.map(task => /*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          onClick: () => updateTask(task.id, !task.completed),\n          children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            edge: \"start\",\n            checked: task.completed,\n            tabIndex: -1,\n            disableRipple: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: task.description,\n            style: {\n              textDecoration: task.completed ? 'line-through' : 'none'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"end\",\n            \"aria-label\": \"delete\",\n            onClick: () => deleteTask(task.id),\n            children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this)]\n        }, task.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"bPCx0+2jxyKSWrxqvYM6Q5jItg8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","Container","Typography","TextField","Button","List","ListItem","ListItemText","IconButton","Checkbox","Grid","Paper","DeleteIcon","jsxDEV","_jsxDEV","App","_s","tasks","setTasks","newTask","setNewTask","fetchTasks","response","get","data","error","console","addTask","trim","post","description","updateTask","id","completed","put","deleteTask","delete","maxWidth","style","marginTop","children","padding","variant","align","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","container","spacing","alignItems","item","xs","fullWidth","label","value","onChange","e","target","color","onClick","map","task","button","edge","checked","tabIndex","disableRipple","primary","textDecoration","_c","$RefreshReg$"],"sources":["/Users/nurfatihah/Desktop/codes/todo-app/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Container, Typography, TextField, Button, List, ListItem, ListItemText, IconButton, Checkbox, Grid, Paper } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nconst App = () => {\n    const [tasks, setTasks] = useState([]);\n    const [newTask, setNewTask] = useState('');\n\n    const fetchTasks = async () => {\n        try {\n            const response = await axios.get('http://localhost:5001/getTasks');\n            setTasks(response.data);\n        } catch (error) {\n            console.error('Error fetching tasks:', error);\n        }\n    };\n\n    useEffect(() => {\n        fetchTasks();\n    }, []);\n\n    const addTask = async () => {\n        if (newTask.trim() === '') return;\n        try {\n            await axios.post('http://localhost:5001/addTask', { description: newTask });\n            setNewTask('');\n            fetchTasks();\n        } catch (error) {\n            console.error('Error adding task:', error);\n        }\n    };\n\n    const updateTask = async (id, completed) => {\n        try {\n            await axios.put(`http://localhost:5001/updateTask/${id}`, { completed });\n            fetchTasks();\n        } catch (error) {\n            console.error('Error updating task:', error);\n        }\n    };\n\n    const deleteTask = async (id) => {\n        try {\n            await axios.delete(`http://localhost:5001/deleteTask/${id}`);\n            fetchTasks();\n        } catch (error) {\n            console.error('Error deleting task:', error);\n        }\n    };\n\n    return (\n        <Container maxWidth=\"sm\" style={{ marginTop: '2rem' }}>\n            <Paper style={{ padding: '1rem' }}>\n                <Typography variant=\"h4\" align=\"center\" gutterBottom>\n                    Todo List\n                </Typography>\n                <Grid container spacing={2} alignItems=\"center\">\n                    <Grid item xs={9}>\n                        <TextField\n                            fullWidth\n                            label=\"New Task\"\n                            variant=\"outlined\"\n                            value={newTask}\n                            onChange={(e) => setNewTask(e.target.value)}\n                        />\n                    </Grid>\n                    <Grid item xs={3}>\n                        <Button variant=\"contained\" color=\"primary\" onClick={addTask}>\n                            Add\n                        </Button>\n                    </Grid>\n                </Grid>\n                <List>\n                    {tasks.map((task) => (\n                        <ListItem key={task.id} button onClick={() => updateTask(task.id, !task.completed)}>\n                            <Checkbox\n                                edge=\"start\"\n                                checked={task.completed}\n                                tabIndex={-1}\n                                disableRipple\n                            />\n                            <ListItemText primary={task.description} style={{ textDecoration: task.completed ? 'line-through' : 'none' }} />\n                            <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => deleteTask(task.id)}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </ListItem>\n                    ))}\n                </List>\n            </Paper>\n        </Container>\n    );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}